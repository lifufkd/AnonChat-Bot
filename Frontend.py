#################################################
#                 created by                    #
#                     ZZS                       #
#                     SBR                       #
#################################################
from telebot import types


class Bot_buttons:
    def __init__(self):
        super(Bot_buttons, self).__init__()
        self.__markup = types.InlineKeyboardMarkup(row_width=2)

    def start_buttons(self):
        btn1 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ T2T', callback_data='t2t_search')
        btn2 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ GROUP', callback_data='group_search')
        btn3 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
        self.__markup.add(btn1, btn2, btn3)
        return self.__markup


class Bot_phrase:
    def __init__(self):
        super(Bot_phrase, self).__init__()
        self.__ru = {'global': ['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ RED ROOMüëã\n–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –æ–±—â–∞—Ç—å—Å—è —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ª—é–¥—å–º–∏.',
                                '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚úÖ']}
        self.__en = {}

    def get_phrase_pac(self, language, _type):
        phrases = self.chose_language(language)
        return phrases[_type]

    def chose_language(self, language):
        if language == 'RU':
            phrases = self.__ru
        elif language == 'EN':
            phrases = self.__en
        return phrases
